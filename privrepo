#!/bin/bash

# Default server
SERVER_DEFAULT="git@raspberry"

# For boolean values
T="t"
F="f"

# Name of readme file
README="README.md"

# Usage of command
USAGE=$(
cat <<EOF
Usage:
privrepo -r <repository>
	[-l <user@server>]
	[-o <directory>]
	[-f] Create a README.md file
	[-h] Show this help
EOF
)

# Retrieve values of given flags
while getopts "l:o:r:fh" OPTION; do
	case $OPTION in
		h) 	echo $USAGE;
			IS_HELP=$T;;
		l) 	REMOTESERV_ADDR=$OPTARG;
			IS_MODIFIED_REMOTESERV_ADDR=$T;;
		o) 	LDIRECTORY_NAME=$OPTARG;
			IS_MODIFIED_LDIRECTORY_NAME=$T;;
		r) 	REPOSITORY_NAME=$OPTARG;
			IS_MODIFIED_REPOSITORY_NAME=$T;;
		f) 	IS_README=$T;;
		\?)	echo $USAGE;;
	esac
done

# Set default boolean values if not defined
: ${IS_HELP=$F}
: ${IS_README=$F}
: ${IS_MODIFIED_REMOTESERV_ADDR=$F}
: ${IS_MODIFIED_LDIRECTORY_NAME=$F}
: ${IS_MODIFIED_REPOSITORY_NAME=$F}

# Error when no repository name is set
if [ "$IS_MODIFIED_REPOSITORY_NAME" == "$F" ] && [ "$IS_HELP" == "$F" ]; then
	echo "You need to specify a name for your repository!"
	echo $USAGE
	exit
fi

# Error when optional arguments -l and/or -o are set but -r is not
if [[ "$IS_MODIFIED_LDIRECTORY_NAME" == "$T" || "$IS_MODIFIED_REMOTESERV_ADDR" == "$T" ]] && 
	[ "$IS_MODIFIED_REPOSITORY_NAME" == "$F" ]; 
then
	echo "You need to specify a name for your repository!"
	echo $USAGE
	exit
fi

# Set default values
if [ "$IS_MODIFIED_REMOTESERV_ADDR" == "$F" ]; then
	: ${REMOTESERV_ADDR=$SERVER_DEFAULT}
fi

if [ "$IS_MODIFIED_LDIRECTORY_NAME" == "$F" ]; then
	: ${LDIRECTORY_NAME=$REPOSITORY_NAME}
fi

# Check if repository already exists
if ssh "$REMOTESERV_ADDR" "[ -d /home/git/$REPOSITORY_NAME.git ]"; then
	echo "Error: Repository $REPOSITORY_NAME.git already exists on remote server."
	exit
fi

if [ -d "$LDIRECTORY_NAME" ]; then
	echo "Error: Directory $LDIRECTORY_NAME already exists on local machine."
	exit
fi

# Variable for commands running on remote server
CMD_REMOTE="mkdir $REPOSITORY_NAME.git && "
CMD_REMOTE+="cd $REPOSITORY_NAME.git && "
CMD_REMOTE+="git init --bare"

# Create new repository on raspberry
echo "Connect to $REMOTESERV_ADDR..."
echo "Create new repository $REPOSITORY_NAME on raspberry..."
ssh "$REMOTESERV_ADDR" "$CMD_REMOTE"
echo "Repository $REPOSITORY_NAME created succesfully."
echo "Close connection to remote host raspberry."

# Create new repository on local machine
echo "Create new repository $LDIRECTORY_NAME on local maschine..."
mkdir "$LDIRECTORY_NAME"
cd "$LDIRECTORY_NAME"

echo "Initialize repository $LDIRECTORY_NAME..."
git init
git remote add origin "$REMOTESERV_ADDR":"$REPOSITORY_NAME"

# README file
if [ "$IS_README" == "$T" ]; then
	echo "Create $README file..."
	echo "# $REPOSITORY_NAME" > "$README"
	git add "$README"
	git commit "$README" -m "Initial commit"
else
	echo "No files for initial commit"
	git commit --allow-empty -m "Initial commit"
fi

# Configure branch to follow remote-branch master
git push --set-upstream origin master
echo "Finished creating repository $LDIRECTORY_NAME."