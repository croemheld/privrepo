#!/bin/sh

# Default values
SERVER_DEFAULT="git@raspberry"
FOLDER_DEFAULT=$REPOSITORY_NAME

# Usage of command
USAGE=$(
cat <<EOF
privrepo
	[-r <repository>]
	[-l <user@server>]
	[-o <directory>]
	[-h]
EOF
)

while getopts "l:o:r:h" OPTION; do
	case $OPTION in
		h) 	echo $USAGE;
			IS_HELP=true;;
		l) 	REMOTESERV_ADDR=$OPTARG;
			IS_MODIFIED_REMOTESERV_ADDR=true;;
		o) 	LDIRECTORY_NAME=$OPTARG;
			IS_MODIFIED_LDIRECTORY_NAME=true;;
		r) 	REPOSITORY_NAME=$OPTARG;
			IS_MODIFIED_REPOSITORY_NAME=true;;
		\?)	echo $USAGE;;
	esac
done

# Error when no repository name is set
if ! $IS_MODIFIED_REPOSITORY_NAME && ! $IS_HELP; then
	echo "You need to specify a name for your repository!"
	echo $USAGE
	exit
fi

: ${REMOTESERV_ADDR-$SERVER_DEFAULT}
: ${LDIRECTORY_NAME-$FOLDER_DEFAULT}

# Check if repository already exists
if ssh $REMOTESERV_ADDR "[ -d /home/git/$REPOSITORY_NAME.git ]"; then
	echo "Error: Repository $REPOSITORY_NAME.git already exists on remote server."
	exit
fi

if [ -d "$LDIRECTORY_NAME" ]; then
	echo "Error: Repository $LDIRECTORY_NAME already exists on local machine."
	exit
fi

# Create new repository on raspberry
echo "Connect to git@raspberry..."
echo "Create new repository $REPOSITORY_NAME on raspberry..."
ssh git@raspberry "mkdir $REPOSITORY_NAME.git && cd $REPOSITORY_NAME.git && git init --bare"
echo "Repository $REPOSITORY_NAME created succesfully."
echo "Close connection to remote host raspberry."

# Create new repository on local machine
echo "Create new repository $LDIRECTORY_NAME on local maschine..."
mkdir $LDIRECTORY_NAME
cd $LDIRECTORY_NAME

echo "Initialize repository $LDIRECTORY_NAME..."
git init
git remote add origin $REMOTESERV_ADDR:$REPOSITORY_NAME

# Create README.md file for later publication
echo "Create README.md file..."
echo "# $REPOSITORY_NAME" > README.md
git add README.md
git commit -am "Initial commit"

# Configure branch to follow remote-branch master
git push --set-upstream origin master
echo "Finished creating repository $LDIRECTORY_NAME."